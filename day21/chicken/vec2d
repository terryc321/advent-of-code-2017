./example.scm:768:			   (vals (get-prop (list-ref (list-ref garr y) x) 'values)))
./example.scm:953:			    (format #t "~a" (list-ref w i)))
./example.scm:993:			    (format #t "~a" (list-ref w i)))
./example.scm:1057:			    (format #t "~a" (list-ref w i)))
./example.scm:1127:			    (format #t "~a" (list-ref w i)))
./rotate.scm:25:  (map (lambda (i) (list-ref xs i)) '(2 0 3 1)))
./rotate.scm:34:  (map (lambda (i) (list-ref xs i)) '(1 0 3 2)))
./rotate.scm:37:  (map (lambda (i) (list-ref xs i)) '(2 3 0 1)))
./rotate.scm:78:  (map (lambda (i) (list-ref xs i)) '(6 3 0
./rotate.scm:89:  (map (lambda (i) (list-ref xs i)) '(6 7 8
./rotate.scm:94:  (map (lambda (i) (list-ref xs i)) '(2 1 0
./version-2.0.scm:917:			   (vals (get-prop (list-ref (list-ref garr y) x) 'values)))
./version-2.0.scm:1102:			    (format #t "~a" (list-ref w i)))
./version-2.0.scm:1142:			    (format #t "~a" (list-ref w i)))
./version-2.0.scm:1206:			    (format #t "~a" (list-ref w i)))
./version-2.0.scm:1276:			    (format #t "~a" (list-ref w i)))
./version-1.0.scm:917:			   (vals (get-prop (list-ref (list-ref garr y) x) 'values)))
./version-1.0.scm:1102:			    (format #t "~a" (list-ref w i)))
./version-1.0.scm:1142:			    (format #t "~a" (list-ref w i)))
./version-1.0.scm:1206:			    (format #t "~a" (list-ref w i)))
./version-1.0.scm:1276:			    (format #t "~a" (list-ref w i)))
./solve.scm:16:(define init-grid  (list->vec2d '(0 1 0       0 0 1       1 1 1)))
./solve.scm:21:      ;; 		     (#t (vector-set! (vector-ref vec2d y) x (list-ref xs i))
./attempt-2.scm:806:			    (format #t "~a" (list-ref w i)))
./attempt-2.scm:846:			    (format #t "~a" (list-ref w i)))
./attempt-2.scm:910:			    (format #t "~a" (list-ref w i)))
./attempt-2.scm:980:			    (format #t "~a" (list-ref w i)))
./maps.scm:202:	 (let* ((from (list->vec2d (car pr)))
./maps.scm:203:		(to (list->vec2d (cadr pr))))
./grid.scm:23:;; (define (list->vec2d xs)
./grid.scm:33:;; 		    (let ((v (list-ref xs i)))
./fun.scm:917:			   (vals (get-prop (list-ref (list-ref garr y) x) 'values)))
./fun.scm:1102:			    (format #t "~a" (list-ref w i)))
./fun.scm:1142:			    (format #t "~a" (list-ref w i)))
./fun.scm:1206:			    (format #t "~a" (list-ref w i)))
./fun.scm:1276:			    (format #t "~a" (list-ref w i)))
